@import url("https://fonts.cdnfonts.com/css/gotham-ssm");

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

@font-face {
  font-family: "GothamMedium";
  src: local("Gotham"), url("./assets/fonts/Gotham-Font/GothamBook.ttf") format("truetype");
  font-weight: bold;
}

@font-face {
  font-family: "GothamBook";
  src: local("Gotham"), url("./assets/fonts/Gotham-Font/GothamMedium.ttf") format("truetype");
  font-weight: light;
}

@font-face {
  font-family: "iciel";
  src: local("iciel"),
    url("./assets/fonts/iciel-gotham-cufonfonts/icielgothammediumregular.otf") format("truetype");
  font-weight: light;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: "Gotham SSm", sans-serif;
}

/* 
Here is an example of a PRD for a hypothetical project:

Product Requirements Document

Project Name: XYZ App

Project Purpose: The XYZ App is a mobile application that allows users to create and share shopping lists with their friends and family. The app aims to simplify the shopping experience and make it more social.

User Persona: Busy young adults who frequently shop for groceries and household items.

Key Features:

User account creation and authentication
Ability to create and manage multiple shopping lists
Integration with popular retailers to provide product and pricing information
Real-time syncing of shopping lists with friends and family
In-app messaging to communicate with list collaborators
Ability to share shopping lists via social media and email
Smart suggestions for products based on user history and preferences
Personalized product recommendations based on current list contents
User Experience: The XYZ App will have a simple and intuitive user interface that allows users to quickly create and manage shopping lists. Users will be able to easily share their lists with others, track changes made by collaborators, and communicate with them in-app. The app will provide personalized recommendations to help users find the products they need.

Use Cases:

User creates a new shopping list and adds products.
User invites a friend or family member to collaborate on a list.
User receives a notification when a list is updated by a collaborator.
User sends a shopping list to a friend via email or social media.
User receives personalized recommendations for products based on their list contents.
Technical Requirements:

The app will be developed for iOS and Android platforms.
The app will use a REST API to integrate with retailer databases.
The app will use a real-time syncing mechanism to keep lists up to date.
The app will use push notifications to notify users of changes made to their lists.
The app will use machine learning algorithms to provide personalized recommendations.
Success Metrics:

User engagement: daily active users, average session length, number of shopping lists created and shared.
User retention: percentage of users who return to the app within 30 days.
User satisfaction: app store ratings and reviews, user surveys.
Mockups:

See attached mockups for visual representation of the app.

Review and Iteration:

The PRD will be reviewed by the development team, project stakeholders, and potential users. Feedback will be used to iterate on the PRD until a final version is agreed upon.


----------------------------------------------------------------


Here is an example of an SRD for a hypothetical software application:

Software Requirements Document

Project Name: XYZ Mobile App

Introduction:

The XYZ Mobile App is a software application that allows users to track their exercise and fitness goals. The purpose of the app is to help users stay motivated and on track with their fitness routines.

User Requirements:

The app should provide the following key features and functionalities:

User account creation and authentication
Ability to set and track fitness goals, such as weight loss or muscle gain
Integration with fitness trackers and other wearable devices
Real-time monitoring of exercise activity and progress towards goals
Personalized workout plans and routines based on user preferences and fitness level
Integration with social media to share progress and connect with other users
In-app messaging to communicate with friends and fitness buddies
Customizable dashboard to display progress and relevant information
System Requirements:

The app should be developed for iOS and Android platforms. It should be compatible with the following operating systems:

iOS 14 or higher
Android 8.0 or higher
The app should also be able to run on the following devices:

iPhone 7 or newer
Samsung Galaxy S8 or newer
Functional Requirements:

User account creation and authentication: The app should allow users to create a new account or log in with an existing account. The authentication process should be secure and reliable.

Setting and tracking fitness goals: The app should allow users to set and track their fitness goals, such as weight loss or muscle gain. Users should be able to input their current weight, target weight, and desired timeframe to achieve their goals.

Integration with fitness trackers: The app should be able to integrate with popular fitness trackers and wearable devices, such as Fitbit and Apple Watch. The app should be able to pull data from these devices to track exercise activity and progress.

Real-time monitoring of exercise activity: The app should provide real-time monitoring of exercise activity, such as steps taken or calories burned. This information should be displayed in an easy-to-read dashboard.

Personalized workout plans and routines: The app should provide personalized workout plans and routines based on user preferences and fitness level. Users should be able to choose their preferred workout style, such as cardio or strength training.

Integration with social media: The app should be able to integrate with popular social media platforms, such as Facebook and Instagram. Users should be able to share their progress and connect with other users.

In-app messaging: The app should provide in-app messaging to allow users to communicate with friends and fitness buddies. Users should be able to send and receive messages within the app.
ÃŸ
Customizable dashboard: The app should provide a customizable dashboard that displays progress and relevant information. Users should be able to choose which information is displayed on the dashboard.

Non-Functional Requirements:

Performance: The app should be responsive and fast, even when handling large amounts of data. Users should not experience any significant lag or delays when using the app.

Reliability: The app should be reliable and stable. Users should not experience any crashes or other technical issues while using the app.

Security: The app should be secure, with user data encrypted and protected from unauthorized access. The authentication process should be secure and reliable.

Usability: The app should be easy to use and intuitive, with a clear and simple user interface. Users should be able to navigate the app and find the information they need without any difficulty.

Design and Architecture:

The app should be designed with a clean and modern interface that is easy to use and navigate. The app should be structured using a modern architecture, with a separation of concerns between the various components of the app.
*/
